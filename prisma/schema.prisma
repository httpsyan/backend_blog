// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  bio       String?
  avatar    String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  posts     Post[]
  comments  Comment[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  slug        String   @unique
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  posts       Post[]

  @@map("categories")
}

model Post {
  id            Int       @id @default(autoincrement())
  title         String
  slug          String    @unique
  content       String
  excerpt       String?
  published     Boolean   @default(false)
  featuredImage String?   @map("featured_image")
  views         Int       @default(0)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  authorId      Int       @map("author_id")
  categoryId    Int       @map("category_id")
  author        User      @relation(fields: [authorId], references: [id])
  category      Category  @relation(fields: [categoryId], references: [id])
  comments      Comment[]
  tags          Tag[]     @relation("PostToTag")

  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  postId    Int      @map("post_id")
  userId    Int      @map("user_id")
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@map("comments")
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  posts     Post[]   @relation("PostToTag")

  @@map("tags")
}
